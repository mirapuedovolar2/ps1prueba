import os
import re
import json
import csv
import string
from openpyxl import load_workbook

# Palabras clave para identificar archivos potenciales
nombres_clave = ["contraseña", "password", "usuarios", "credenciales", "clave", "login", "secrets"]
contenido_clave = ["password", "contraseña", "usuario", "user", "clave", "login"]

# Extensiones que se van a analizar
extensiones_soportadas = (
    '.txt', '.log', '.ini', '.conf', '.xml', '.cfg',
    '.xlsx', '.csv', '.json'
)

resultados = []

# Ruta de salida segura
output_file = os.path.join("C:\\Users\\Public", "resultados_credenciales.txt")

# Detectar todas las unidades disponibles en el sistema
def obtener_unidades():
    unidades = []
    for letra in string.ascii_uppercase:
        ruta = f"{letra}:\\" 
        if os.path.exists(ruta):
            unidades.append(ruta)
    return unidades

def extraer_de_xlsx(filepath):
    try:
        wb = load_workbook(filepath, read_only=True, data_only=True)
        contenido = ""
        for sheet in wb.worksheets:
            for row in sheet.iter_rows(values_only=True):
                contenido += " ".join([str(cell) for cell in row if cell is not None]) + "\n"
        return contenido
    except Exception:
        return ""

def extraer_de_csv(filepath):
    try:
        with open(filepath, newline='', encoding='utf-8', errors='ignore') as csvfile:
            reader = csv.reader(csvfile)
            return '\n'.join([' | '.join(row) for row in reader])
    except Exception:
        return ""

def extraer_de_json(filepath):
    try:
        with open(filepath, 'r', encoding='utf-8', errors='ignore') as f:
            data = json.load(f)
            return json.dumps(data, indent=2)
    except Exception:
        return ""

for unidad in obtener_unidades():
    for root, dirs, files in os.walk(unidad, topdown=True):
        dirs[:] = [d for d in dirs if not d.startswith('$')]
        for file in files:
            try:
                filepath = os.path.join(root, file)
                if any(clave in file.lower() for clave in nombres_clave) and file.lower().endswith(extensiones_soportadas):
                    extension = os.path.splitext(file)[1].lower()

                    if extension in ('.txt', '.log', '.ini', '.conf', '.xml', '.cfg'):
                        with open(filepath, 'r', errors='ignore', encoding='utf-8') as f:
                            contenido = f.read()
                    elif extension == '.xlsx':
                        contenido = extraer_de_xlsx(filepath)
                    elif extension == '.csv':
                        contenido = extraer_de_csv(filepath)
                    elif extension == '.json':
                        contenido = extraer_de_json(filepath)
                    else:
                        continue

                    if any(k in contenido.lower() for k in contenido_clave):
                        usuario = re.search(r"(usuario|user|login)[\s:=]+([^\s]+)", contenido, re.IGNORECASE)
                        contraseña = re.search(r"(contraseña|password|clave)[\s:=]+([^\s]+)", contenido, re.IGNORECASE)

                        lineas = [
                            f"Dirección del archivo: {filepath}",
                        ]
                        if usuario:
                            lineas.append(f"Usuario: {usuario.group(2)}")
                        if contraseña:
                            lineas.append(f"Contraseña: {contraseña.group(2)}")

                        if len(lineas) > 1:
                            resultados.append('\n'.join(lineas) + "\n\n")
            except Exception:
                continue

try:
    if resultados:
        with open(output_file, "w", encoding="utf-8") as salida:
            salida.writelines(resultados)
except:
    pass
